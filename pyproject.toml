[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "semantic-mpc-interface"
version = "0.1.0"
description = "A Python package for creating and managing semantic building models using Brick Schema and ASHRAE Standard 223P"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = ["building", "semantic", "brick", "s223", "ontology", "rdf"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "buildingmotif>=0.3.0",
    "rdflib>=7.1.3",
    "pyshacl>=0.26.0",
    "pandas>=2.0.3",
    "requests>=2.32.4",
]

[project.optional-dependencies]
grafana = ["grafanalib>=0.7.1"]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "isort>=5.0",
    "flake8>=6.0",
    "mypy>=1.0",
]
docs = [
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.18",
]
jupyter = ["ipykernel>=6.29.5"]

[project.urls]
Homepage = "https://github.com/yourusername/semantic-mpc-interface"
Documentation = "https://semantic-mpc-interface.readthedocs.io"
Repository = "https://github.com/yourusername/semantic-mpc-interface.git"
Issues = "https://github.com/yourusername/semantic-mpc-interface/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/semantic_mpc_interface"]

[tool.hatch.build.targets.wheel.sources]
"src" = ""

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src/semantic_mpc_interface --cov-report=html --cov-report=term-missing"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true